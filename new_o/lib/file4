赋予“库名”以“【库】‘参数0’”。
如果存在‘库名’那么退出。
赋予‘库名’以调用“L”、“‘参数0’.so”。

调用先调用“G”、‘‘库名’’、“_api__”、“$0”、“$9”、“$19”、“$2”、“$3”、“$4”、“$13”、“$23”、“$17”了。

赋予“【‘库名’】最终文件名”以调用“GS”、‘‘库名’’、“cheng2xu4ming2___”、“c*”。
赋予“【‘库名’】移除..”以调用“Gc*”、‘‘库名’’、“remove_dd__”、“c*”。
赋予“【‘库名’】省略名”以调用“GSZ”、‘‘库名’’、“shenglvename__”、“c*”（、……选项：x去掉后缀，/级分隔符，_保留空级）。
赋予“【‘库名’】唯一文件名”以调用“GS”、‘‘库名’’、“only_name__”、“c*”（目录）、“c*”（名字，可以是路径）。

赋予“【‘库名’】extractfilename”以调用“GS”、‘‘库名’’、“extractfilename___”、“c*”、“i”（0：扩展名，1：名，2：路径名，3：盘符，4：协议，-1：参数）。
赋予“【‘库名’】得目录名”以调用“GS”、‘‘库名’’、“extractfilename___”、“c*”、“${l2}”。
赋予“【‘库名’】得文件主名”以调用“GS”、‘‘库名’’、“extractfilename___”、“c*”、“${l1}”。
赋予“【‘库名’】得扩展名”以调用“GS”、‘‘库名’’、“extractfilename___”、“c*”、“${l0}”。
赋予“【‘库名’】得协议名”以调用“GS”、‘‘库名’’、“extractfilename___”、“c*”、“${l4}”。
（下两条为兼容）
赋予“【‘库名’】【代码】目录名”以“调用‘extractfilename’、如果存在参数1那么‘参数1’否则‘【上】参数0’、“2””。
赋予“【‘库名’】【代码】文件主名”以“调用‘extractfilename’、如果存在参数1那么‘参数1’否则‘【上】参数0’、“1””。

赋予“【‘库名’】urlencode”以调用“GEAZ”、‘‘库名’’、“urlencode__”、“c*”（、c*遮罩、c*不编码的字符）。
赋予“【‘库名’】urldecode”以调用“GEAZ”、‘‘库名’’、“urldecode__”、“c*”（、c*遮罩）。
（分析后直接在当前区分配变量，共4个命名变量、把键值对参数对应分配个）
赋予“【‘库名’】urlparse”以调用“GE”、‘‘库名’’、“url_parse__”、“$1”、“c*”（url）、“${*锚点}”、“${*协议名}”、“${*域名}”、“${*路径}”。

赋予“【‘库名’】fileinfo”以调用“GSZ”、‘‘库名’’、“_fileinfo__”、“c*”（文件名）、“c*”（
格式：%后s大小、m属性、M、o、t时间（后a访问、m修改、c建立）、i ino、b blocks、B blksize、r rdev、u uid、g gid、n nlink、d dev，其他原样）。

赋予“【‘库名’】得符号链接”以调用“GS”、‘‘库名’’、“_symlnk_get__”、“c*”（path）。
赋予“【‘库名’】建符号链接”以调用“Gi”、‘‘库名’’、“_symlnk_create__”、“c*”（path2）、“c*”（path）、“i”（force）。
