赋予“库名”以‘参数0’。
如果存在“‘库名’【顶】”那么退出。
赋予“‘库名’【顶】【锁】”以。

加载“lib/defi”。
加载“lib/file4”。
加载“lib/regexpr4”。
加载“lib/gjk4”。

赋予“应用名【主】【锁】”以隧道“标题”。
赋予“应用目录【主】【锁】”以调用‘最终文件名’、先调用‘得目录名’、‘参数0【上】’了。
赋予“应用实名【主】【锁】”以调用‘正则格’、‘应用目录’、“.*/([^/]+)”。

赋予“家目录【主】【锁】”以调用‘得环境变量方法’、“HOME”。
赋予“配置目录【主】【锁】”以“‘家目录’/.config/‘应用实名’_zs”。
赋予“缓存目录【主】【锁】”以“‘家目录’/.cache/‘应用实名’_zs”。
赋予“配置文件【主】【锁】”以“‘配置目录’/setting.zs”。

定义“配置文件加载【主】【锁】”以下代码
	加载“lib/doscmd4”。
	如果调用‘exist’、‘配置文件’那么加载‘配置文件’，1否则0。
上代码。

定义“配置文件保存【主】【锁】”以下代码
	加载“lib/doscmd4”。
	加载“lib/gjke4”。
	赋予“类型”以“-t”。
	赋予“是数组”以0。
	赋予“是定义”以0。
	赋予“引名”以0。
	赋予“始”以。
	赋予“文件”以‘配置文件’。
	如果存在参数1并且‘参数1’等于“--f”那么先
		赋予“文件”以‘参数2’。
		赋予“始”以3。
	了。
	赋予“内容”以迭代解释下代码
		当‘参数1’先
			等于“-t”或者等于“-yy”或者等于“-c”或者等于“-”那么赋予“类型【上】”以‘参数1’，再来。
			等于“-a”那么赋予“是数组【上】”以1，再来。
			等于“-a-”那么赋予“是数组【上】”以0，再来。
			等于“-d”那么赋予“是定义【上】”以1，再来。
			等于“-d-”那么赋予“是定义【上】”以0，再来。
			等于“-n”那么赋予“引名【上】”以1，再来。
			等于“-n-”那么赋予“引名【上】”以0，再来。
		了。
		别名“名”以“参数1”。
		如果‘是数组’那么先
			“增至数组‘名’、‘‘名’数目2’、”。
			遍历数组下代码
				↙→。
				序迭代解释下代码
					别名“值”以“参数2”。
					当‘类型’先
						等于“-t”那么先
							““‘值’””。
							跳出。
						了。
						等于“-yy”那么先
							“下原样‘值’上原样”。
							跳出。
						了。
						等于“-c”那么先
							“下代码‘值’上代码”。
							跳出。
						了。
						等于“-”那么先
							“‘值’”。
							跳出。
						了。
					了。
					“、”。
				上代码、‘参数栈’。
			上代码、‘名’。
		了否则先
			先如果‘是定义’那么“定义”否则“赋予”了先如果‘引名’那么““‘名’””否则‘名’了“以”。
			当‘类型’先
				等于“-t”那么先
					““‘‘名’’””。
					跳出。
				了。
				等于“-yy”那么先
					“下原样‘‘名’’上原样”。
					跳出。
				了。
				等于“-c”那么先
					“下代码”↙→‘‘名’’↙“上代码”。
					跳出。
				了。
				等于“-”那么先
					“‘‘名’’”。
					跳出。
				了。
			了。
		了。
		“。”↙。
	上代码、‘参数栈‘始’’。
	赋予“错”以执行“mkdir -p '‘配置目录’'”。
	如果调用‘echo’、‘内容’、‘文件’不等于0那么
		赋予“按”以隧道提示、“保存 ‘文件’ 失败”、‘应用名’。
上代码。